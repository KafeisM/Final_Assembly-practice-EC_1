00001044 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 23/05/2022 23:16:58

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : PRAFIN22
00000000                             3  * Written by : Jordi Florit Ensenyat y Marc Ferrer Fernandez
00000000                             4  * Date       : 30/05/2022
00000000                             5  * Description: Emulador de la JARVIS
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG $1000
00001000= 2800 2A03 50E0 0...        8  EMEM:   DC.W $2800,$2A03,$50E0,$0B60,$5114,$0C70,$1430,$0E40,$7140,$3001,$32FF,$90D0
00001018= 8020 C000 0002 0...        9          DC.W $8020,$C000,$0002,$0003,$0001,$0003,$0002,$0004,$0000,$0000,$0000
0000102E= 0000                      10  EIR:    DC.W 0 ;eregistro de instruccion
00001030= 0000                      11  EPC:    DC.W 0 ;econtador de programa
00001032= 0000                      12  EB0:    DC.W 0 ;eregistro B0
00001034= 0000                      13  EB1:    DC.W 0 ;eregistro B1
00001036= 0000                      14  ER2:    DC.W 0 ;eregistro R2
00001038= 0000                      15  ER3:    DC.W 0 ;eregistro R3
0000103A= 0000                      16  ER4:    DC.W 0 ;eregistro R4
0000103C= 0000                      17  ER5:    DC.W 0 ;eregistro R5
0000103E= 0000                      18  ET6:    DC.W 0 ;eregistro T6
00001040= 0000                      19  ET7:    DC.W 0 ;eregistro T7
00001042= 0000                      20  ESR:    DC.W 0 ;eregistro de estado (00000000 00000ZCN)
00001044                            21  
00001044                            22  START:
00001044  4278 1030                 23         CLR.W EPC
00001048                            24  
00001048                            25  
00001048                            26  FETCH:
00001048                            27      ;--- IFETCH: INICIO FETCH
00001048                            28          ;*** En esta seccion debeis introducir el codigo necesario para cargar
00001048                            29          ;*** en el EIR la siguiente instruccion a ejecutar, indicada por el EPC,
00001048                            30          ;*** y dejar listo el EPC para que apunte a la siguiente instruccion
00001048                            31         
00001048  3078 1030                 32         MOVE.W EPC,A0
0000104C  2408                      33         MOVE.L A0,D2
0000104E  C4FC 0002                 34         MULU #2,D2
00001052  2042                      35         MOVE.L D2,A0
00001054                            36     
00001054  31E8 1000 102E            37         MOVE.W EMEM(A0),EIR
0000105A                            38         
0000105A  5278 1030                 39         ADDQ.W #1,EPC   ;incrementar PC
0000105E                            40          
0000105E                            41      ;--- FFETCH: FIN FETCH
0000105E                            42      
0000105E                            43      
0000105E                            44      ;--- IBRDECOD: INICIO SALTO A DECOD
0000105E                            45          ;*** En esta seccion debeis preparar la pila para llamar a la subrutina
0000105E                            46          ;*** DECOD, llamar a la subrutina, y vaciar la pila correctamente,
0000105E                            47          ;*** almacenando el resultado de la decodificacion en D1
0000105E                            48          
0000105E  554F                      49         SUB.W #2,SP ;reserva espacio resultado
00001060  3F38 102E                 50         MOVE.W EIR,-(SP) ;paso parametro EIR
00001064                            51         
00001064  4EB9 00001330             52         JSR DECOD
0000106A                            53         
0000106A  322F 0002                 54         MOVE.W 2(SP),D1 ;parametro de salida
0000106E  548F                      55         ADD.L #2,SP
00001070                            56         
00001070                            57      ;--- FBRDECOD: FIN SALTO A DECOD
00001070                            58      
00001070                            59      
00001070                            60      ;--- IBREXEC: INICIO SALTO A FASE DE EJECUCION
00001070                            61          ;*** Esta seccion se usa para saltar a la fase de ejecucion
00001070                            62          ;*** NO HACE FALTA MODIFICARLA
00001070  C2FC 0006                 63         MULU #6,D1
00001074  2241                      64         MOVEA.L D1,A1
00001076  4EE9 107A                 65         JMP JMPLIST(A1)
0000107A                            66  JMPLIST:
0000107A  4EF9 000010CE             67      JMP ETRA
00001080  4EF9 0000110A             68      JMP EADD
00001086  4EF9 0000115A             69      JMP ESUB
0000108C  4EF9 0000115E             70      JMP ENAN
00001092  4EF9 00001162             71      JMP ESTC
00001098  4EF9 00001196             72      JMP EINC
0000109E  4EF9 000011DC             73      JMP ELOA
000010A4  4EF9 000011E0             74      JMP ELOAX
000010AA  4EF9 000011E4             75      JMP ESTO
000010B0  4EF9 000011E8             76      JMP ESTOX
000010B6  4EF9 000011EC             77      JMP EBRI
000010BC  4EF9 000011F0             78      JMP EBRZ
000010C2  4EF9 000011F4             79      JMP EBRN
000010C8  4EF9 000011F8             80      JMP ESTP
000010CE                            81      ;--- FBREXEC: FIN SALTO A FASE DE EJECUCION
000010CE                            82      
000010CE                            83      
000010CE                            84      ;--- IEXEC: INICIO EJECUCION
000010CE                            85          ;*** En esta seccion debeis implementar la ejecucion de cada einstr.
000010CE                            86          
000010CE                            87          ;registros que NO se pueden usar D0,D1,D2,A0 
000010CE                            88      
000010CE                            89      ; ESCRIBID EN CADA ETIQUETA LA FASE DE EJECUCION DE CADA INSTRUCCION
000010CE                            90      
000010CE                            91  ETRA:
000010CE                            92      ;mover aaa a la posicion menos significativa
000010CE  3638 102E                 93      MOVE.W EIR,D3
000010D2  C67C 00F0                 94      AND.W #$00F0,D3
000010D6  E88B                      95      LSR.L #4,D3
000010D8                            96  
000010D8  4EB9 000011FC             97      JSR DECOD_VALOR
000010DE                            98      ;en D4 esta el valor de aaa en decimal
000010DE  4EB9 00001220             99      JSR COJER_CONTENIDO
000010E4                           100      ;en D5 esta el contenido de el eregistro Xa
000010E4                           101      
000010E4                           102      ;mirar donde guardar el contenido de Xa
000010E4  3638 102E                103      MOVE.W EIR,D3
000010E8  C67C 0F00                104      AND.W #$0F00,D3
000010EC  E08B                     105      LSR.L #8,D3
000010EE                           106      
000010EE  4EB9 000011FC            107      JSR DECOD_VALOR
000010F4                           108      ;en D4 esta el valor de bbb en decimal
000010F4  4EB9 00001282            109      JSR GUARDAR_CONTENIDO
000010FA                           110      
000010FA                           111      ;actualizar flags Z y N
000010FA  4EB9 000012E4            112      JSR ACT_FLAGS
00001100                           113      
00001100                           114      ;limpiar los registros usados
00001100  4243                     115      CLR.W D3
00001102  4244                     116      CLR.W D4
00001104  4245                     117      CLR.W D5    
00001106                           118      
00001106  4EF8 1048                119      JMP FETCH
0000110A                           120  EADD:
0000110A                           121      ;mover aaa a la posicion menos significativa
0000110A  3638 102E                122      MOVE.W EIR,D3
0000110E  C67C 00F0                123      AND.W #$00F0,D3
00001112  E88B                     124      LSR.L #4,D3
00001114                           125  
00001114  4EB9 000011FC            126      JSR DECOD_VALOR
0000111A                           127      ;en D4 esta el valor de aaa en decimal
0000111A  4EB9 00001220            128      JSR COJER_CONTENIDO
00001120                           129      ;en D5 esta el contenido de el eregistro Xa
00001120  3A06                     130      MOVE.W D6,D5
00001122                           131      
00001122                           132      ;mirar el operando b
00001122  3638 102E                133      MOVE.W EIR,D3
00001126  C67C 0F00                134      AND.W #$0F00,D3
0000112A  E08B                     135      LSR.L #8,D3
0000112C                           136      
0000112C  4EB9 000011FC            137      JSR DECOD_VALOR
00001132                           138      ;en D4 esta el valor de bbb en decimal
00001132  4EB9 00001220            139      JSR COJER_CONTENIDO
00001138                           140      ;en D5 esta el contenido de bbb
00001138                           141      
00001138  DC45                     142      ADD.W D5,D6
0000113A                           143      ;resultado suma en D5
0000113A  40C7                     144      MOVE.W SR,D7
0000113C                           145      ;guardar flags de la operación
0000113C                           146      
0000113C  4EB9 00001282            147      JSR GUARDAR_CONTENIDO
00001142                           148      ;D4 es bbb, guardar contenido ahi
00001142                           149      
00001142                           150      ;actualizar flags Z,N (con lo que hay en D5)
00001142  4EB9 000012E4            151      JSR ACT_FLAGS
00001148                           152      ;actualizar flag C
00001148  4EB9 00001316            153      JSR ACT_FLAG_C
0000114E                           154      
0000114E                           155      ;limpiar registros
0000114E  4243                     156      CLR.W D3
00001150  4244                     157      CLR.W D4
00001152  4245                     158      CLR.W D5
00001154  4246                     159      CLR.W D6
00001156                           160      
00001156  4EF8 1048                161      JMP FETCH
0000115A                           162  ESUB:
0000115A  4EF8 1048                163      JMP FETCH
0000115E                           164  ENAN:
0000115E  4EF8 1048                165      JMP FETCH
00001162                           166  ESTC:
00001162  3638 102E                167      MOVE.W EIR,D3
00001166  C67C 0F00                168      AND.W #$0F00,D3
0000116A  E08B                     169      LSR.L #8,D3
0000116C  4EB9 000011FC            170      JSR DECOD_VALOR
00001172                           171      ;en D4 esta el valor de bbb en decimal
00001172                           172      
00001172                           173      ;cojer constante k
00001172  3638 102E                174      MOVE.W EIR,D3
00001176  C67C 00FF                175      AND.W #$00FF,D3
0000117A  4883                     176      EXT.W D3
0000117C  48C3                     177      EXT.L D3
0000117E  3A03                     178      MOVE.W D3,D5
00001180                           179      ;guardarlo en el registro indicado (D4 <--- [D5])
00001180                           180      ;actualizar flags N y Z
00001180  4EB9 000012E4            181      JSR ACT_FLAGS
00001186                           182      
00001186  4EB9 00001282            183      JSR GUARDAR_CONTENIDO
0000118C                           184      
0000118C  4243                     185      CLR.W D3
0000118E  4244                     186      CLR.W D4
00001190  4245                     187      CLR.W D5
00001192                           188      
00001192  4EF8 1048                189      JMP FETCH
00001196                           190  
00001196                           191  EINC:;revisar
00001196                           192      ;cojer constante k
00001196  3638 102E                193      MOVE.W EIR,D3
0000119A  C67C 00FF                194      AND.W #$00FF,D3
0000119E  4883                     195      EXT.W D3
000011A0  48C3                     196      EXT.L D3
000011A2  3C03                     197      MOVE.W D3,D6
000011A4                           198      
000011A4  3638 102E                199      MOVE.W EIR,D3
000011A8  C67C 0F00                200      AND.W #$0F00,D3
000011AC  E08B                     201      LSR.L #8,D3
000011AE  4EB9 000011FC            202      JSR DECOD_VALOR
000011B4                           203      ;en D4 esta el valor de bbb en decimal
000011B4                           204      
000011B4  4EB9 00001220            205      JSR COJER_CONTENIDO
000011BA                           206      ;en D5 contenido de bbb
000011BA                           207      
000011BA  DC45                     208      ADD.W D5,D6
000011BC                           209      
000011BC                           210      ;actualizar flags N,Z y C
000011BC  40C7                     211      MOVE.W SR,D7
000011BE  4EB9 000012E4            212      JSR ACT_FLAGS
000011C4  4EB9 00001316            213      JSR ACT_FLAG_C
000011CA                           214      
000011CA  4EB9 00001282            215      JSR GUARDAR_CONTENIDO
000011D0                           216      ;guarda la suma en el eregistro correspondiente
000011D0                           217      
000011D0  4243                     218      CLR.W D3
000011D2  4244                     219      CLR.W D4
000011D4  4245                     220      CLR.W D5
000011D6  4246                     221      CLR.W D6
000011D8                           222   
000011D8  4EF8 1048                223      JMP FETCH
000011DC                           224       
000011DC                           225  ELOA:
000011DC  4EF8 1048                226      JMP FETCH
000011E0                           227  ELOAX:
000011E0  4EF8 1048                228      JMP FETCH
000011E4                           229  ESTO:
000011E4  4EF8 1048                230      JMP FETCH
000011E8                           231  ESTOX:
000011E8  4EF8 1048                232      JMP FETCH
000011EC                           233  EBRI:
000011EC  4EF8 1048                234      JMP FETCH
000011F0                           235  EBRZ:
000011F0  4EF8 1048                236      JMP FETCH
000011F4                           237  EBRN:
000011F4  4EF8 1048                238      JMP FETCH
000011F8                           239  ESTP:
000011F8  FFFF FFFF                240      SIMHALT   
000011FC                           241      ;--- FEXEC: FIN EJECUCION
000011FC                           242  
000011FC                           243      ;--- ISUBR: INICIO SUBRUTINAS
000011FC                           244          ;*** Aqui debeis incluir las subrutinas que necesite vuestra solucion
000011FC                           245          ;*** SALVO DECOD, que va en la siguiente seccion
000011FC                           246  DECOD_VALOR:
000011FC  383C 0000                247      MOVE.W #0,D4
00001200                           248      
00001200  0803 0000                249      BTST #0,D3
00001204  6700 0004                250      BEQ CERO1
00001208  5244                     251      ADD.W #1,D4
0000120A                           252      
0000120A                           253  CERO1:
0000120A  0803 0001                254      BTST #1,D3
0000120E  6700 0004                255      BEQ CERO2
00001212  5444                     256      ADD.W #2,D4
00001214                           257      
00001214                           258  CERO2:   
00001214  0803 0002                259      BTST #2,D3
00001218  6700 0004                260      BEQ CERO3
0000121C  5844                     261      ADD.W #4,D4
0000121E                           262      
0000121E                           263  CERO3:
0000121E  4E75                     264      RTS
00001220                           265      
00001220                           266  COJER_CONTENIDO:
00001220                           267      ;coje el contenido de la posicion de memoria y lo almacena en D5
00001220                           268      
00001220  B87C 0000                269      CMP #0,D4 ;B0
00001224  6600 0006                270      BNE AUX0
00001228  3A38 1032                271      MOVE EB0,D5
0000122C                           272      
0000122C                           273  AUX0:
0000122C  B87C 0001                274      CMP #1,D4 ;B1
00001230  6600 0006                275      BNE AUX1
00001234  3A38 1034                276      MOVE EB1,D5
00001238                           277      
00001238                           278  AUX1:    
00001238  B87C 0002                279      CMP #2,D4 ;R2
0000123C  6600 0006                280      BNE AUX2
00001240  3A38 1036                281      MOVE ER2,D5
00001244                           282      
00001244                           283  AUX2:    
00001244  B87C 0003                284      CMP #3,D4 ;R3
00001248  6600 0006                285      BNE AUX3
0000124C  3A38 1038                286      MOVE ER3,D5
00001250                           287  
00001250                           288  AUX3:    
00001250  B87C 0004                289      CMP #4,D4 ;R4
00001254  6600 0006                290      BNE AUX4
00001258  3A38 103A                291      MOVE ER4,D5
0000125C                           292  
0000125C                           293  AUX4:    
0000125C  B87C 0005                294      CMP #5,D4 ;R5
00001260  6600 0006                295      BNE AUX5
00001264  3A38 103C                296      MOVE ER5,D5
00001268                           297  
00001268                           298  AUX5:    
00001268  B87C 0006                299      CMP #6,D4 ;T6
0000126C  6600 0006                300      BNE AUX6
00001270  3A38 103E                301      MOVE ET6,D5
00001274                           302      
00001274                           303  AUX6:   
00001274  B87C 0007                304      CMP #7,D4 ;T7
00001278  6600 0006                305      BNE AUX7
0000127C  3A38 1040                306      MOVE ET7,D5
00001280                           307      
00001280                           308  AUX7:
00001280  4E75                     309      RTS
00001282                           310      
00001282                           311  GUARDAR_CONTENIDO:
00001282                           312      ;guarda el contenido de D5 en la posicion indicada por D4
00001282                           313      
00001282  B87C 0000                314      CMP #0,D4 ;B0
00001286  6600 0006                315      BNE AUX0_
0000128A  31C5 1032                316      MOVE D5,EB0
0000128E                           317      
0000128E                           318  AUX0_:
0000128E  B87C 0001                319      CMP #1,D4 ;B1
00001292  6600 0006                320      BNE AUX1_
00001296  31C5 1034                321      MOVE D5,EB1
0000129A                           322      
0000129A                           323  AUX1_:    
0000129A  B87C 0002                324      CMP #2,D4 ;R2
0000129E  6600 0006                325      BNE AUX2_
000012A2  31C5 1036                326      MOVE D5,ER2
000012A6                           327      
000012A6                           328  AUX2_:    
000012A6  B87C 0003                329      CMP #3,D4 ;R3
000012AA  6600 0006                330      BNE AUX3_
000012AE  31C5 1038                331      MOVE D5,ER3
000012B2                           332  
000012B2                           333  AUX3_:    
000012B2  B87C 0004                334      CMP #4,D4 ;R4
000012B6  6600 0006                335      BNE AUX4_
000012BA  31C5 103A                336      MOVE D5,ER4
000012BE                           337  
000012BE                           338  AUX4_:    
000012BE  B87C 0005                339      CMP #5,D4 ;R5
000012C2  6600 0006                340      BNE AUX5_
000012C6  31C5 103C                341      MOVE D5,ER5
000012CA                           342  
000012CA                           343  AUX5_:    
000012CA  B87C 0006                344      CMP #6,D4 ;T6
000012CE  6600 0006                345      BNE AUX6_
000012D2  31C5 103E                346      MOVE D5,ET6
000012D6                           347      
000012D6                           348  AUX6_:   
000012D6  B87C 0007                349      CMP #7,D4 ;T7
000012DA  6600 0006                350      BNE AUX7_
000012DE  31C5 1040                351      MOVE D5,ET7
000012E2                           352      
000012E2                           353  AUX7_:
000012E2                           354  
000012E2  4E75                     355      RTS
000012E4                           356  
000012E4                           357  ;Actualización de flags Z y N (Dato en D5)
000012E4                           358  ACT_FLAGS:
000012E4  3F06                     359      MOVE.W D6,-(SP)
000012E6                           360      
000012E6  3C38 1042                361      MOVE.W ESR,D6
000012EA                           362      
000012EA  BA7C 0000                363      CMP #0,D5
000012EE  6600 000A                364      BNE _CERO
000012F2  08C6 0002                365      BSET #2,D6
000012F6  6000 0006                366      BRA UNO_PUESTO
000012FA                           367  _CERO:
000012FA  0886 0002                368      BCLR #2,D6
000012FE                           369  UNO_PUESTO:
000012FE                           370      
000012FE  0B3C 000F                371      BTST D5,#15
00001302  6600 000A                372      BNE ES_0
00001306  08C6 0000                373      BSET #0,D6
0000130A  6000 0006                374      BRA UNO_PUESTO1
0000130E                           375  ES_0:
0000130E  0886 0000                376      BCLR #0,D6
00001312                           377  UNO_PUESTO1:
00001312                           378  
00001312  3C1F                     379      MOVE.W (SP)+,D6
00001314  4E75                     380      RTS
00001316                           381      
00001316                           382  ;actualizar flag C  
00001316                           383  ACT_FLAG_C:
00001316  3F06                     384      MOVE.W D6,-(SP)
00001318  3C38 1042                385      MOVE.W ESR,D6
0000131C                           386  
0000131C  0F3C 0000                387      BTST D7,#0
00001320  6600 000A                388      BNE ES_CERO
00001324  08C6 0001                389      BSET #1,D6
00001328  31C6 1042                390      MOVE.W D6,ESR
0000132C                           391       
0000132C                           392  ES_CERO:
0000132C  3C1F                     393      MOVE.W (SP)+,D6    
0000132E                           394      
0000132E  4E75                     395      RTS
00001330                           396  
00001330                           397          
00001330                           398      ;--- FSUBR: FIN SUBRUTINAS
00001330                           399      
00001330                           400  
00001330                           401      ;--- IDECOD: INICIO DECOD
00001330                           402          ;*** Tras la etiqueta DECOD, debeis implementar la subrutina de 
00001330                           403          ;*** decodificacion, que debera ser de libreria, siguiendo la interfaz
00001330                           404          ;*** especificada en el enunciado
00001330                           405  DECOD:
00001330                           406  ;guardar registros en la pila
00001330                           407  
00001330  3F00                     408         MOVE.W D0,-(SP)
00001332  3F02                     409         MOVE.W D2,-(SP)
00001334                           410         
00001334  342F 0008                411         MOVE.W 8(SP),D2
00001338                           412         
00001338  0802 000F                413         BTST.L #15,D2
0000133C  6600 00C2                414         BNE BIT15_1   
00001340                           415         
00001340                           416  ;Inicio rama 0x
00001340  0802 000E                417         BTST.L #14,D2
00001344  6600 0072                418         BNE R0BIT14_1
00001348                           419         
00001348                           420        
00001348  0802 000D                421         BTST.L #13,D2
0000134C  6600 0016                422         BNE R02BIT13_1
00001350                           423         
00001350                           424        
00001350  0802 000C                425         BTST.L #12,D2
00001354  6600 0042                426         BNE R02BIT12_1 
00001358                           427         
00001358                           428        
00001358  3F7C 0000 000A           429         MOVE.W #0,10(SP)  ;instruccion num TRA
0000135E  4EF9 00001448            430         JMP END_DEC
00001364                           431         
00001364                           432  R02BIT13_1:
00001364  0802 000C                433         BTST.L #12,D2
00001368  6600 0022                434         BNE R022BIT12_1
0000136C                           435        
0000136C  0802 000B                436         BTST.L #11,D2
00001370  6600 000E                437         BNE R02BIT11_1
00001374                           438        
00001374  3F7C 0003 000A           439         MOVE.W #3,10(SP)  ;instruccion num NAN
0000137A  4EF9 00001448            440         JMP END_DEC
00001380                           441  
00001380                           442   
00001380                           443  R02BIT11_1:
00001380  3F7C 0004 000A           444         MOVE.W #4,10(SP)  ;instruccion num STC
00001386  4EF9 00001448            445         JMP END_DEC
0000138C                           446         
0000138C                           447  R022BIT12_1:
0000138C  3F7C 0005 000A           448         MOVE.W #5,10(SP)  ;instruccion num INC
00001392  4EF9 00001448            449         JMP END_DEC
00001398                           450  
00001398                           451  R02BIT12_1: 
00001398  0802 000B                452         BTST.L #11,D2
0000139C  6600 000E                453         BNE R022BIT11_1
000013A0                           454        
000013A0  3F7C 0001 000A           455         MOVE.W #1,10(SP)  ;instruccion num ADD
000013A6  4EF9 00001448            456         JMP END_DEC
000013AC                           457         
000013AC                           458  R022BIT11_1:
000013AC  3F7C 0002 000A           459         MOVE.W #2,10(SP)  ;instruccion num SUB
000013B2  4EF9 00001448            460         JMP END_DEC      
000013B8                           461  
000013B8                           462        
000013B8                           463        
000013B8                           464        ;si bit 14 = 1
000013B8                           465  R0BIT14_1:
000013B8  0802 000D                466         BTST.L #13,D2
000013BC  6600 0016                467         BNE R0BIT13_1
000013C0                           468         
000013C0  0802 000C                469         BTST.L #12,D2
000013C4  6600 0022                470         BNE R0_1_BIT12_1
000013C8                           471         
000013C8  3F7C 0006 000A           472         MOVE.W #6,10(SP)  ;instrucciónn num LOA M
000013CE  4EF9 00001448            473         JMP END_DEC
000013D4                           474         
000013D4                           475  R0BIT13_1:
000013D4  0802 000C                476         BTST.L #12,D2
000013D8  6600 001A                477         BNE R0_2_BIT12_1
000013DC  3F7C 0008 000A           478         MOVE.W #8,10(SP)   ;instruccion num STOM
000013E2  4EF9 00001448            479         JMP END_DEC
000013E8                           480  
000013E8                           481  R0_1_BIT12_1:
000013E8  3F7C 0007 000A           482         MOVE.W #7,10(SP) ;instruccion num LOAX
000013EE  4EF9 00001448            483         JMP END_DEC
000013F4                           484         
000013F4                           485  R0_2_BIT12_1:
000013F4  3F7C 0009 000A           486         MOVE.W #9,10(SP) ;instruccion num STOX
000013FA  4EF9 00001448            487         JMP END_DEC
00001400                           488         
00001400                           489    
00001400                           490  
00001400                           491  
00001400                           492       
00001400                           493  ;Inicio rama 1x 
00001400                           494  BIT15_1:
00001400  0802 000E                495         BTST.L #14,D2
00001404  6600 001E                496         BNE R1BIT14_1
00001408                           497         
00001408  0802 000D                498         BTST.L #13,D2
0000140C  6600 0022                499         BNE R1BIT13_1
00001410                           500         
00001410  0802 000C                501         BTST.L #12,D2
00001414  6600 0026                502         BNE R1BIT12_1
00001418                           503         
00001418  3F7C 000A 000A           504         MOVE.W #10,10(SP) ;instrucción  num BRI M
0000141E  4EF9 00001448            505         JMP END_DEC
00001424                           506         
00001424                           507      
00001424                           508  R1BIT14_1:
00001424  3F7C 000D 000A           509         MOVE.W #13,10(SP) ;instrucción num STP
0000142A  4EF9 00001448            510         JMP END_DEC
00001430                           511                                       
00001430                           512  R1BIT13_1:
00001430  3F7C 000C 000A           513         MOVE.W #12,10(SP) ;instruccin num BRN M
00001436  4EF9 00001448            514         JMP END_DEC
0000143C                           515  
0000143C                           516  R1BIT12_1:
0000143C                           517        
0000143C  3F7C 000B 000A           518        MOVE.W #11,10(SP) ;instruccion num BRZ M
00001442  4EF9 00001448            519        JMP END_DEC
00001448                           520        
00001448                           521  
00001448                           522  END_DEC:
00001448                           523  
00001448                           524  ;devolver los valores a los registros desde la pila
00001448  341F                     525        MOVE.W (SP)+,D2
0000144A  301F                     526        MOVE.W (SP)+,D0
0000144C                           527  
0000144C                           528        
0000144C  4E75                     529        RTS
0000144E                           530        
0000144E                           531      ;--- FDECOD: FIN DECOD
0000144E                           532      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACT_FLAGS           12E4
ACT_FLAG_C          1316
AUX0                122C
AUX0_               128E
AUX1                1238
AUX1_               129A
AUX2                1244
AUX2_               12A6
AUX3                1250
AUX3_               12B2
AUX4                125C
AUX4_               12BE
AUX5                1268
AUX5_               12CA
AUX6                1274
AUX6_               12D6
AUX7                1280
AUX7_               12E2
BIT15_1             1400
CERO1               120A
CERO2               1214
CERO3               121E
COJER_CONTENIDO     1220
DECOD               1330
DECOD_VALOR         11FC
EADD                110A
EB0                 1032
EB1                 1034
EBRI                11EC
EBRN                11F4
EBRZ                11F0
EINC                1196
EIR                 102E
ELOA                11DC
ELOAX               11E0
EMEM                1000
ENAN                115E
END_DEC             1448
EPC                 1030
ER2                 1036
ER3                 1038
ER4                 103A
ER5                 103C
ESR                 1042
ESTC                1162
ESTO                11E4
ESTOX               11E8
ESTP                11F8
ESUB                115A
ES_0                130E
ES_CERO             132C
ET6                 103E
ET7                 1040
ETRA                10CE
FETCH               1048
GUARDAR_CONTENIDO   1282
JMPLIST             107A
R022BIT11_1         13AC
R022BIT12_1         138C
R02BIT11_1          1380
R02BIT12_1          1398
R02BIT13_1          1364
R0BIT13_1           13D4
R0BIT14_1           13B8
R0_1_BIT12_1        13E8
R0_2_BIT12_1        13F4
R1BIT12_1           143C
R1BIT13_1           1430
R1BIT14_1           1424
START               1044
UNO_PUESTO          12FE
UNO_PUESTO1         1312
_CERO               12FA
